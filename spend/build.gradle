apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        config {
            storeFile file('/home/alex/StudioProjects/key.jks')
            storePassword key_store_password
            keyAlias 'spend'
            keyPassword spend_signing_password
        }
    }
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.qwert2603.spenddemo"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 22
        versionName "4.2.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "Long", "BIULD_TIME", System.currentTimeMillis() + "L"
        buildConfigField "String", "BIULD_HASH", '"' + UUID.randomUUID().toString() + '"'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-snapshot"
        }
        release {
            shrinkResources true
            minifyEnabled true
//            useProguard false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    flavorDimensions "server", "aim"

    productFlavors {
        noServer {
            dimension "server"
            applicationIdSuffix ".noServer"
            versionNameSuffix "-noServer"
        }
        serverTest {
            dimension "server"
            applicationIdSuffix ".serverTest"
            versionNameSuffix "-serverTest"
        }
        serverProd {
            dimension "server"
            applicationIdSuffix ".serverProd"
            versionNameSuffix "-serverProd"
        }

        forTesting {
            dimension "aim"
            applicationIdSuffix ".forTesting"
            versionNameSuffix "-forTesting"
        }
        forMarket {
            dimension "aim"
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {

    def support_version = '28.0.0'
    def room_version = "1.1.1"
    def lifecycle_version = "1.1.1"

    def andrlib_version = '1.12.7'
    def andrlib_generator_version = '1.0.10'

    def rxjava_version = '2.2.3'
    def rxandroid_version = '2.1.0'
    def rxbinding_version = '2.1.1'

    def mosby_version = '3.1.0'
    def fragmentargs_version = '3.0.2'
    def cicerone_version = '4.0.2'

    def dagger_version = '2.19'
    def retrofit_version = '2.4.0'
    def okhttp_version = '3.11.0'

    def stetho_version = '1.5.0'
    def junit_version = '4.12'
    def android_test_runner_version = "1.0.2"

    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-media-compat:$support_version"

    implementation "com.github.qwert2603:andrlib:$andrlib_version"
    implementation "com.github.qwert2603:andrlib_generator:$andrlib_generator_version"
    annotationProcessor "com.github.qwert2603:andrlib_generator:$andrlib_generator_version"
    kapt "com.github.qwert2603:andrlib_generator:$andrlib_generator_version"

    implementation "android.arch.lifecycle:extensions:$lifecycle_version"

    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "com.hannesdorfmann.fragmentargs:annotation:$fragmentargs_version"
    kapt "com.hannesdorfmann.fragmentargs:processor:$fragmentargs_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "ru.terrakok.cicerone:cicerone:$cicerone_version"
    implementation "com.hannesdorfmann.mosby3:mvi:$mosby_version"

    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxbinding_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$android_test_runner_version"

    forTestingImplementation "com.facebook.stetho:stetho:$stetho_version"
}

repositories {
    mavenCentral()
    google()
    maven { url "http://repository.jetbrains.com/all" }
    maven { url 'https://www.jitpack.io' }
}